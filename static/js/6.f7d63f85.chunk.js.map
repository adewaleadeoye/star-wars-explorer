{"version":3,"sources":["hooks/useStarWarsGroupData.ts","components/List/ListItems.tsx","components/Paginator.tsx","components/Planets/PlanetsList.tsx","pages/Planets/index.tsx"],"names":["useStarWarsGroupData","expectedKey","expectedRoute","getExpectedList","dataSource","setExpected","dispatch","useDispatch","history","useHistory","useState","pageNumber","updatePageNumber","useEffect","a","getData","onNavigate","evtSource","pageNo","handleListItemClick","e","position","generatedId","getId","data","find","p","index","push","useStyles","makeStyles","theme","createStyles","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","ListItems","item","itemType","classes","className","alignItems","button","onClick","event","alt","name","title","src","constants","BASE_IMG_URL","getListItemType","generated_id","primary","variant","component","marginTop","spacing","Paginator","pages","count","showFirstButton","showLastButton","onChange","PlanetsList","planets","useAppSelector","listPlanets","planetsPageCount","isLoading","loadingStatus","getPlanetsList","setPlanet","LoadingSpinner","renderList","map","planet","PLANETS","Movies","setHeaderTitle","headerTitle","setBackButtonValue","backTo","Box"],"mappings":"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","file":"static/js/6.f7d63f85.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { listItemClick } from '../components/List/ListItems';\nimport { onPaginationChangeCallback } from '../components/Paginator';\nimport { getId } from '../utils/helpers';\n\nconst useStarWarsGroupData = ({expectedKey, expectedRoute, getExpectedList, dataSource, setExpected}:any) => {\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [pageNumber, updatePageNumber] = useState<number>(1);\n\n    useEffect(() => {\n        const getData = async () => {\n          await dispatch(getExpectedList(pageNumber));\n        };\n        getData();\n      }, [dispatch, pageNumber, getExpectedList]);\n\n      const onNavigate: onPaginationChangeCallback = (evtSource, pageNo) => {\n        updatePageNumber(pageNo);\n      };\n\n      const handleListItemClick: listItemClick = (e, position) => {\n        const generatedId = getId(pageNumber, position)\n        const data = dataSource.find((p:any, index:number) => index === position);\n        if(data)\n        dispatch(\n          setExpected({\n            [expectedKey]: data,\n          })\n        );\n        history.push(`/${expectedRoute}/${generatedId}`)\n      };\n\n      return {pageNumber, onNavigate, handleListItemClick}\n}\n\nexport default useStarWarsGroupData","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { StarWarsProps } from '../../utils/types';\nimport constants from '../../utils/constants';\nimport { getListItemType } from '../../utils/helpers';\n\nexport type listItemClick = StarWarsProps['listItemClick']\n\ninterface Props {\n    item: any,\n    position: number,\n    itemType: string,\n    handleListItemClick: listItemClick \n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: '36ch',\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: 'inline',\n    },\n  }),\n);\n\nconst ListItems = ({item, itemType, position, handleListItemClick}:Props) => {\nconst classes = useStyles();\n\n  return (\n    <List className={classes.root}>\n      <ListItem alignItems=\"flex-start\" button onClick={(event) => handleListItemClick(event, position)}>\n        <ListItemAvatar>\n          <Avatar alt={item.name ?? item.title} src={`${constants.BASE_IMG_URL}/${getListItemType(itemType)}/${item.generated_id}.jpg`} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={item.name ?? item.title}\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n    </List>\n  );\n}\n\nexport default ListItems\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { StarWarsProps } from '../utils/types';\n\nexport type onPaginationChangeCallback = StarWarsProps['onPaginationChange'];\n\ninterface Props {\n  pages: number;\n  onNavigate?: onPaginationChangeCallback;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst Paginator = ({ pages, onNavigate }: Props) => {\n  const classes = useStyles();\n\n  if (pages === 0) {\n    return <></>;\n  }\n  \n  return (\n    <div className={classes.root}>\n      <Pagination\n        count={pages}\n        showFirstButton\n        showLastButton\n        onChange={onNavigate}\n      />\n    </div>\n  );\n};\nexport default Paginator;\n","import React from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport useStarWarsGroupData from '../../hooks/useStarWarsGroupData';\nimport constants from '../../utils/constants';\nimport LoadingSpinner from '../Indicator/LoadingSpinner';\nimport ListItems from '../List/ListItems';\nimport Paginator from '../Paginator';\nimport {\n  getPlanetsList,\n  listPlanets,\n  loadingStatus,\n  Planet,\n  planetsPageCount,\n  setPlanet,\n} from './planetsSlice';\n\nconst PlanetsList = () => {\n  const planets = useAppSelector(listPlanets);\n  const pages = useAppSelector(planetsPageCount);\n  const isLoading = useAppSelector(loadingStatus);\n\n  const { onNavigate, handleListItemClick } = useStarWarsGroupData({\n    expectedKey: 'planet',\n    expectedRoute: 'planets',\n    getExpectedList: getPlanetsList,\n    dataSource: planets,\n    setExpected: setPlanet,\n  });\n\n  if (isLoading) {\n    return <LoadingSpinner />;\n  }\n\n  const renderList = planets.map((planet: Planet, index: number) => {\n    return (\n      <ListItems\n        key={index}\n        item={planet}\n        itemType={constants.PLANETS}\n        position={index}\n        handleListItemClick={handleListItemClick}\n      />\n    );\n  });\n\n  return (\n    <>\n      {renderList}\n      <Paginator pages={pages} onNavigate={onNavigate} />\n    </>\n  );\n};\n\nexport default PlanetsList;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  setHeaderTitle,\n  setBackButtonValue,\n} from '../../components/Layout/Header/headerSlice';\nimport { Box } from '@material-ui/core';\nimport PlanetsList from '../../components/Planets/PlanetsList'\n\nconst Movies = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setHeaderTitle({ headerTitle: 'Planets' }));\n    dispatch(setBackButtonValue({ backTo: '/' }));\n  }, [dispatch]);\n\n  return (\n    <Box>\n      <PlanetsList />\n    </Box>\n  );\n};\n\nexport default Movies;\n"],"sourceRoot":""}